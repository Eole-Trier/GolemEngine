#version 430

struct VertexGpu {
    vec3 position;
    float padding1;
    vec3 normal;
    float padding2;
    vec2 textureCoords;
    vec2 padding3;
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) readonly buffer ssboVerticesIn {
    VertexGpu verticesIn[];
};

layout(std430, binding = 1) buffer ssboVerticesOut {
    VertexGpu verticesOut[];
};


void main()
{
    uint currentIndex = gl_GlobalInvocationID.x;
    VertexGpu vIn = verticesIn[currentIndex];
//    vIn.position.y = vIn.position.x * vIn.position.x + vIn.position.z * vIn.position.z;
    verticesOut[currentIndex] = vIn;
}
#version 430

struct Vertex {
    vec3 position;
    float padding1;
    vec3 normal;
    float padding2;
    vec2 textureCoords;
    vec2 padding3;
};

//struct Vertex {
//    float data[8];
//};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) readonly buffer ssboVerticesIn {
    Vertex verticesIn[];
};

layout(std430, binding = 1) buffer ssboVerticesOut {
    Vertex verticesOut[];
};

void main()
{
    uint currentIndex = gl_GlobalInvocationID.x;
    verticesOut[0].normal.y = 22.0;
    verticesOut[currentIndex] = verticesIn[currentIndex];
    verticesOut[currentIndex].normal.y = verticesOut[0].normal.y + (22.0 * currentIndex);
}